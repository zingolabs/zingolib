name: CI

on:
  pull_request:
  push:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  # static_checks:
  #   name: Format check and clippy
  #   runs-on: ubuntu-22.04
  #   env:
  #     RUSTFLAGS: -D warnings
  #     RUSTUP_HOME: /home/runner/.rustup
  #     CARGO_HOME: /home/runner/.cargo
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Reject trailing whitespace
  #       run: ./utils/trailing-whitespace.sh reject

  #     - name: Setup rustup toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         components: rustfmt, clippy

  #     - name: What's my env
  #       run:  env

  #     - name: Whoami
  #       run:  whoami

  #     - name: Which rustup
  #       run:  which rustup

  #     - name: Rustup show
  #       run:  rustup show

  #     - name: Check formatting of code
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: fmt
  #         args: --check

  #     - name: Clippy checks
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy

  cache-regtest:
    uses: ./.github/workflows/cache-regtest.yaml

  cargo-test:
    name: Cargo test
    needs: cache-regtest
    if: ${{ ! cancelled() }}
    runs-on: ubuntu-22.04
    env:
      RUSTFLAGS: -D warnings
      RUSTUP_HOME: /home/runner/.rustup
      CARGO_HOME: /home/runner/.cargo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup rustup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install cargo tarpaulin
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-tarpaulin

      - name: Regtest cache
        uses: actions/cache@v3
        with:
          path: |
            regtest/bin
            /home/runner/.zcash-params
          key: regtest
          fail-on-cache-miss: true
       
      - name: Cargo cache
        id: cargo-cache
        uses: actions/cache@v3
        with:
          # Following cargo cache recommendations:
          # https://doc.rust-lang.org/cargo/guide/cargo-home.html
          # added 'target' directory to skip compiling dependencies
          path: |
            /home/runner/.cargo/.crates.toml
            /home/runner/.cargo/.crates2.json
            /home/runner/.cargo/bin/
            /home/runner/.cargo/registry/index/
            /home/runner/.cargo/registry/cache/
            /home/runner/.cargo/registry/git/db/
            target/
          key: cargo-zingolib-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-zingolib

      - name: Run tests and generate coverage
        uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          args: --all-features --verbose --workspace --avoid-cfg-tarpaulin --skip-clean --ignore-tests --release --timeout 3000 --out xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cobertura.xml
          # fail_ci_if_error:     true

  # create-timestamp:
  #   uses: zingolabs/zingo-mobile/.github/workflows/create-timestamp.yaml@dev

  # create-cache-key:
  #   uses: zingolabs/zingo-mobile/.github/workflows/create-cache-key.yaml@dev

  # build-android:
  #   strategy:
  #     matrix:
  #       arch: [ x86_64, armeabi-v7a ]
  #   uses: zingolabs/zingo-mobile/.github/workflows/build.yaml@dev
  #   needs: create-cache-key
  #   with:
  #     cache-key: ${{ needs.create-cache-key.outputs.cache-key }}
  #     arch: ${{ matrix.arch }}

  # integration-test-android:
  #   uses: zingolabs/zingo-mobile/.github/workflows/integration-test.yaml@dev
  #   needs: [ create-timestamp, create-cache-key, build-android ]
  #   if: ${{ ! cancelled() }}
  #   with:
  #     timestamp: ${{ needs.create-timestamp.outputs.timestamp }}
  #     cache-key: ${{ needs.create-cache-key.outputs.cache-key }}
  #     abi: armeabi-v7a

  # e2e-test-android:
  #   uses: zingolabs/zingo-mobile/.github/workflows/e2e-test.yaml@dev
  #   needs: [ create-cache-key, build-android ]
  #   if: ${{ ! cancelled() }}
  #   with:
  #     cache-key: ${{ needs.create-cache-key.outputs.cache-key }}
